package controller;

import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.awt.image.BufferedImage;

import javax.swing.JFrame;

public class Main extends Canvas implements Runnable{
	

	private static final long serialVersionUID = 1L;
	public static int width = 240;
	public static int height = 120;
	public static int scale = 3;
	
	public Player player;
	
	public Main() {
		this.setPreferredSize(new Dimension(width*scale,height*scale));
	}
	
	public static void main(String[] args) {
		
		Main game = new Main();
		
		JFrame frame = new JFrame("Pong");
		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.add(game);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
		
		new Thread(game).start();
		
	}

	public void tick() {
		
	}
	
	public void render() {
		BufferStrategy bs = this.getBufferStrategy();
		if (bs == null) {
			this.createBufferStrategy(3);
		}
		
		Graphics g = bs.getDrawGraphics();
		player.render(g);
		
	}
	
	@Override
	public void run() {
		
		while (true) {
			render();
			tick();
			try {
				Thread.sleep(1000/60);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
			
		
	}
	
	
}
